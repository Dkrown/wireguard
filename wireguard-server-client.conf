Wireguard VPN configurations with Bind9 [Debian 12 / Ubuntu-22.04 server]
=========================================================================
Wireguard server:
-----------------
Step 1: Install wireguard and resolvconf through the following commands -
	sudo apt update
	sudo apt install wireguard && sudo apt install resolvconf -y
	NOTE:	'resolvconf' is NOT the same as 'resolv.conf', if 'resolvconf'
		isn't installed on the system, 'wireguard' would breaks!


Step 2: Generate private and public keys into wireguard's directory -
	cd /etc/wireguard
	umask 077 && wg genkey | tee server_private.key | wg pubkey > server_public.key
	ls -la (to verify the keys generated.)

	Next, open: nano server.conf and type as below -

	[Interface]
	Address = 10.10.20.1/24
	ListenPort = 58880
	PrivateKey = Paste your server's private key generated here

	[Peer]
	PublicKey = The client public key will be pasted here
	AllowedIPs = 10.10.20.2/32


Step 3: Move/switch over to the client machine and perform step 1 and step 2 above -
	sudo apt update
	sudo apt install wireguard && sudo apt install resolvconf -y

	cd /etc/wireguard
	umask 077 && wg genkey | tee client_private.key | wg pubkey > client_public.key
	ls -la (to verify the keys generated.)

	Next, open: nano client.conf and type as below -

	[Interface]
	Address = 10.10.20.2/24
	DNS = 10.10.20.1 (This is the server's IP address)
	PrivateKey = Paste your client's private key generated here

	[Peer]
	PublicKey = The server public key will be pasted here
	AllowedIPs = 10.10.20.2/32
	Endpoint = 203.85.203.85:58880 (Or ens3* IP like 192.168.75.131:58880)
	PersistentKeepalive = 20


Step 4: cd into 'bind9/named' directory and add 10.10.20.0/24 to the 'allow-recursion'
	directive as follow - 
	
	cd /etc/bind
	nano named.conf.options
	In the options {
	...
	allow-recursion { 127.0.0.1; 10.10.20.0/24;};
	// NOTE: You can add ens3* IP like { 127.0.0.1; 192.168.75.131; 10.10.20.0/24} 
	// If 'bind9' isn't available on your system, you can install it as follow
	// sudo apt install bind9 -y
	// and the modify file '/etc/bind/named.conf.options' as explained above.
	};

	save and exix the file.	

	Next edit /etc/default/named file and add -4 to the file.
	sudo nano /etc/default/named
	OPTIONS="-u bind -4"

	save and exit the file.

	Next restart named.service or bind9
	sudo systemctl restart named.service
	sudo systemctl status named.service
	// NOTE: If there is error check the file for typo!


Step 5: Enable IP forwarding on server side -
	sudo nano /etc/sysctl.conf
	uncomment net.ipv4.ip_forward = 1
	save and exit the file
	sudo sysctl -p

	Enable iptables masquerading -
	sudo iptables -t nat -L POSTROUTING
	
	Allow firewall rules with ufw -
	sudo ufw allow ssh
	sudo ufw allow 53
	sudo ufw allow 58880/udp
	sudo ufw allow from 10.10.20.0/24
	sudo ufw reload
	sudo ufw status verbose


Step 6: First enable and start the server's wireguard service through -
	sudo systemctl enable wg-quick@server.service
	sudo systemctl start wg-quick@server.service

	Check status of wireguard service -
	wg show server
	ip addr show server

	Next, move to the client and do the same -
	sudo systemctl enable wg-quick@client.service
	sudo systemctl start wg-quick@client.service
	
	Check status of wireguard service -
	wg show client
	ip addr show client


That's a few slightly configurations you need to get your WireGuard VPN to work. Now you
can your a few checks on the connections by:

1 - ping the server from the client and from the server to the client
	ping 10.10.20.2 -c 4; ping 10.10.20.1 -c 4
	// NOTE: If there is error check your conf files for typos!

2 - Check out the links below for additional info...

https://www.linuxbabe.com/debian/wireguard-vpn-server-debian
https://wireguard.how/server/debian/
https://wireguard.how/client/debian/
https://wiki.debian.org/WireGuard

Final words, understanding DNS (bind9 configurations) and networking services such as 
systemd-networkd and NetworkManager configurations would help navigate through those resources 
(links) provided, if things break!
